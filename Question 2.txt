2) Explain the design pattern used in following:
    interface Vehicle {
        int set_num_of_wheels()
        int set_num_of_passengers()
        boolean has_gas()
    }
a) Explain how can you use the pattern to create car and plane class?
b) Use a different design pattern for this solution.

Answer: 
a) 
The design pattern used in this is factory method. A car and a plane class can be created by extending
the Vehicle interface to the car and plane class.

class Car extends Vehicle{
    .....
}
class Plane extends Vehicle{
    .....
}

b) Builder pattern can also be used for this solution, it is a creational design pattern that lets you construct complex objects step by step.
    interface Vehicle {
        int  set_num_of_wheels()
        int  set_num_of_passengers()
        boolean  has_gas()
    }

class CarBuilder extends Vehicle{
        ...
}